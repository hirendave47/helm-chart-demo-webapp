apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-demo-app-2
  labels:
    app: my-demo-app-2
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      name: my-demo-app-2
      labels:
        app: my-demo-app-2
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: my-demo-app-2
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          ports:
            - containerPort: 80
              name: http
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: config-volume
          configMap:
            name: my-demo-app-2-conf
      restartPolicy: Always
  selector:
    matchLabels:
      app: my-demo-app-2
